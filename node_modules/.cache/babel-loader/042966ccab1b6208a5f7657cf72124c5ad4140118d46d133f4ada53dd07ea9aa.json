{"ast":null,"code":"export default {\n  name: \"Dashboard\",\n  data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: []\n    };\n  },\n  methods: {\n    async getPedidos() {\n      const req = await fetch('http://localhost:3000/burgers');\n      const data = await req.json();\n      this.burgers = data;\n      this.getStatus();\n    },\n    async getStatus() {\n      const req = await fetch('http://localhost:3000/status');\n      const data = await req.json();\n      this.status = data;\n    },\n    async deleteBurger(id) {\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: 'DELETE'\n      });\n      const res = await req.json();\n      this.getPedidos();\n    },\n    async updateBurger(event, id) {\n      const option = event.target.value;\n      const dataJson = JSON.stringify({\n        status: option\n      });\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n      console.log(res);\n    }\n  },\n  mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"names":["name","data","burgers","burger_id","status","methods","getPedidos","req","fetch","json","getStatus","deleteBurger","id","method","res","updateBurger","event","option","target","value","dataJson","JSON","stringify","headers","body","console","log","mounted"],"sources":["D:\\Vuejs\\3_make_your_burger\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n    <div id=\"burger-table\">\r\n        <div>\r\n            <div id=\"burger-table-heading\">\r\n                <div class=\"order-id\">#</div>\r\n                <div>Clientes:</div>\r\n                <div>Pão:</div>\r\n                <div>Carne:</div>\r\n                <div>Opcionais:</div>\r\n                <div>Ações</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"burger-table-rows\">\r\n            <div class=\"burger-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n                <div class=\"order-number\">{{ burger.id }}</div>\r\n                <div>{{ burger.nome }}</div>\r\n                <div>{{ burger.pao }}</div>\r\n                <div>{{ burger.carne }}</div>\r\n                <div>\r\n                    <ul>\r\n                        <li v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n                            {{ opcional }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <select name=\"status\" class=\"status\" @click=\"updateBurger($event, burger.id)\">\r\n                        <option value=\"\">Selecione</option>\r\n                        <option v-for=\"s in status\" :key=\"s.id\" :value=\"s.tipo\" :selected=\"burger.status == s.tipo\">\r\n                            {{ s.tipo }}\r\n                        </option>\r\n                    </select>\r\n                    <button class=\"delete-btn\" @click=\"deleteBurger(burger.id)\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Dashboard\",\r\n    data(){\r\n        return{\r\n            burgers: null,\r\n            burger_id: null,\r\n            status: []\r\n        }\r\n    },\r\n    methods: {\r\n        async getPedidos(){\r\n            const req = await fetch('http://localhost:3000/burgers');\r\n            const data = await req.json();\r\n            this.burgers = data;\r\n\r\n            this.getStatus();\r\n        },\r\n        async getStatus(){\r\n            const req = await fetch('http://localhost:3000/status');\r\n            const data = await req.json();\r\n            this.status = data;\r\n\r\n        },\r\n        async deleteBurger(id){\r\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n                method: 'DELETE'\r\n            });\r\n            const res = await req.json();\r\n            \r\n            this.getPedidos();\r\n        },\r\n        async updateBurger(event, id){\r\n            const option = event.target.value;\r\n            const dataJson = JSON.stringify({ status: option });\r\n            const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n                method: 'PATCH',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: dataJson\r\n            });\r\n\r\n            const res = await req.json();\r\n\r\n            console.log(res);\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getPedidos();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  #burger-table {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #burger-table-heading,\r\n  #burger-table-rows,\r\n  .burger-table-row {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  #burger-table-heading {\r\n    font-weight: bold;\r\n    padding: 12px;\r\n    border-bottom: 3px solid #333;\r\n  }\r\n\r\n  .burger-table-row {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border-bottom: 1px solid #CCC;\r\n  }\r\n\r\n  #burger-table-heading div,\r\n  .burger-table-row div {\r\n    width: 19%;\r\n  }\r\n\r\n  #burger-table-heading .order-id,\r\n  .burger-table-row .order-number {\r\n    width: 5%;\r\n  }\r\n\r\n  select {\r\n    padding: 12px 6px;\r\n    margin-right: 12px;\r\n  }\r\n\r\n  .delete-btn {\r\n    background-color: #222;\r\n    color:#fcba03;\r\n    font-weight: bold;\r\n    border: 2px solid #222;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin: 0 auto;\r\n    cursor: pointer;\r\n    transition: .5s;\r\n  }\r\n  \r\n  .delete-btn:hover {\r\n    background-color: transparent;\r\n    color: #222;\r\n  }\r\n  \r\n</style>"],"mappings":"AAwCA,eAAe;EACXA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAE;MACd,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MACxD,MAAMP,IAAG,GAAI,MAAMM,GAAG,CAACE,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACP,OAAM,GAAID,IAAI;MAEnB,IAAI,CAACS,SAAS,CAAC,CAAC;IACpB,CAAC;IACD,MAAMA,SAASA,CAAA,EAAE;MACb,MAAMH,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MACvD,MAAMP,IAAG,GAAI,MAAMM,GAAG,CAACE,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACL,MAAK,GAAIH,IAAI;IAEtB,CAAC;IACD,MAAMU,YAAYA,CAACC,EAAE,EAAC;MAClB,MAAML,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAAC,EAAE;QAC3DC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,MAAMC,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;MAE5B,IAAI,CAACH,UAAU,CAAC,CAAC;IACrB,CAAC;IACD,MAAMS,YAAYA,CAACC,KAAK,EAAEJ,EAAE,EAAC;MACzB,MAAMK,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK;MACjC,MAAMC,QAAO,GAAIC,IAAI,CAACC,SAAS,CAAC;QAAElB,MAAM,EAAEa;MAAO,CAAC,CAAC;MACnD,MAAMV,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAAC,EAAE;QAC3DC,MAAM,EAAE,OAAO;QACfU,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEJ;MACV,CAAC,CAAC;MAEF,MAAMN,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,CAAC,CAAC;MAE5BgB,OAAO,CAACC,GAAG,CAACZ,GAAG,CAAC;IACpB;EACJ,CAAC;EACDa,OAAOA,CAAA,EAAE;IACL,IAAI,CAACrB,UAAU,CAAC,CAAC;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}